// output of ./demo/comb/partition-odd-asc-subset-lex-csh-demo.cc:
// Description:
//% Partitions of n into odd parts, cyclically shifted subset-lex order.
//% Loopless algorithm.

arg 1: 19 == n  [partitions of n]  default=19
   0:  [15]  [ 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 ]
   1:  [13]  [ 1 1 1 1 1 1 1 1 1 1 1 3 5 ]
   2:  [13]  [ 1 1 1 1 1 1 1 1 1 1 3 3 3 ]
   3:  [11]  [ 1 1 1 1 1 1 1 1 1 3 7 ]
   4:  [11]  [ 1 1 1 1 1 1 1 1 1 5 5 ]
   5:  [11]  [ 1 1 1 1 1 1 1 1 3 3 5 ]
   6:  [ 9]  [ 1 1 1 1 1 1 1 3 9 ]
   7:  [11]  [ 1 1 1 1 1 1 1 3 3 3 3 ]
   8:  [ 9]  [ 1 1 1 1 1 1 1 5 7 ]
   9:  [ 9]  [ 1 1 1 1 1 1 3 3 7 ]
  10:  [ 9]  [ 1 1 1 1 1 1 3 5 5 ]
  11:  [ 7]  [ 1 1 1 1 1 3 11 ]
  12:  [ 9]  [ 1 1 1 1 1 3 3 3 5 ]
  13:  [ 7]  [ 1 1 1 1 1 5 9 ]
  14:  [ 7]  [ 1 1 1 1 1 7 7 ]
  15:  [ 7]  [ 1 1 1 1 3 3 9 ]
  16:  [ 9]  [ 1 1 1 1 3 3 3 3 3 ]
  17:  [ 7]  [ 1 1 1 1 3 5 7 ]
  18:  [ 7]  [ 1 1 1 1 5 5 5 ]
  19:  [ 5]  [ 1 1 1 3 13 ]
  20:  [ 7]  [ 1 1 1 3 3 3 7 ]
  21:  [ 7]  [ 1 1 1 3 3 5 5 ]
  22:  [ 5]  [ 1 1 1 5 11 ]
  23:  [ 5]  [ 1 1 1 7 9 ]
  24:  [ 5]  [ 1 1 3 3 11 ]
  25:  [ 7]  [ 1 1 3 3 3 3 5 ]
  26:  [ 5]  [ 1 1 3 5 9 ]
  27:  [ 5]  [ 1 1 3 7 7 ]
  28:  [ 5]  [ 1 1 5 5 7 ]
  29:  [ 3]  [ 1 3 15 ]
  30:  [ 5]  [ 1 3 3 3 9 ]
  31:  [ 7]  [ 1 3 3 3 3 3 3 ]
  32:  [ 5]  [ 1 3 3 5 7 ]
  33:  [ 5]  [ 1 3 5 5 5 ]
  34:  [ 3]  [ 1 5 13 ]
  35:  [ 3]  [ 1 7 11 ]
  36:  [ 3]  [ 1 9 9 ]
  37:  [ 3]  [ 3 3 13 ]
  38:  [ 5]  [ 3 3 3 3 7 ]
  39:  [ 5]  [ 3 3 3 5 5 ]
  40:  [ 3]  [ 3 5 11 ]
  41:  [ 3]  [ 3 7 9 ]
  42:  [ 3]  [ 5 5 9 ]
  43:  [ 3]  [ 5 7 7 ]
  44:  [ 1]  [ 19 ]
  45:  [ 3]  [ 1 1 17 ]
  46:  [ 5]  [ 1 1 1 1 15 ]
  47:  [ 7]  [ 1 1 1 1 1 1 13 ]
  48:  [ 9]  [ 1 1 1 1 1 1 1 1 11 ]
  49:  [11]  [ 1 1 1 1 1 1 1 1 1 1 9 ]
  50:  [13]  [ 1 1 1 1 1 1 1 1 1 1 1 1 7 ]
  51:  [15]  [ 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 ]
  52:  [17]  [ 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 ]
  53:  [19]  [ 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ]
 ct=54
