// output of ./demo/comb/composition-ex-colex-demo.cc:
// Description:
//% Compositions of n into exactly k parts in co-lexicographic (colex) order.

arg 1: 8 == n  [Compositions of n (n>=1)]  default=8
arg 2: 4 == k  [Into exactly k parts (must have: k<=n) ]  default=4
   1:    [ 5 1 1 1 ]  3      [ 4 . . . ]
   2:    [ 4 2 1 1 ]  1      [ 3 1 . . ]
   3:    [ 3 3 1 1 ]  1      [ 2 2 . . ]
   4:    [ 2 4 1 1 ]  1      [ 1 3 . . ]
   5:    [ 1 5 1 1 ]  1      [ . 4 . . ]
   6:    [ 4 1 2 1 ]  2      [ 3 . 1 . ]
   7:    [ 3 2 2 1 ]  1      [ 2 1 1 . ]
   8:    [ 2 3 2 1 ]  1      [ 1 2 1 . ]
   9:    [ 1 4 2 1 ]  1      [ . 3 1 . ]
  10:    [ 3 1 3 1 ]  2      [ 2 . 2 . ]
  11:    [ 2 2 3 1 ]  1      [ 1 1 2 . ]
  12:    [ 1 3 3 1 ]  1      [ . 2 2 . ]
  13:    [ 2 1 4 1 ]  2      [ 1 . 3 . ]
  14:    [ 1 2 4 1 ]  1      [ . 1 3 . ]
  15:    [ 1 1 5 1 ]  2      [ . . 4 . ]
  16:    [ 4 1 1 2 ]  3      [ 3 . . 1 ]
  17:    [ 3 2 1 2 ]  1      [ 2 1 . 1 ]
  18:    [ 2 3 1 2 ]  1      [ 1 2 . 1 ]
  19:    [ 1 4 1 2 ]  1      [ . 3 . 1 ]
  20:    [ 3 1 2 2 ]  2      [ 2 . 1 1 ]
  21:    [ 2 2 2 2 ]  1      [ 1 1 1 1 ]
  22:    [ 1 3 2 2 ]  1      [ . 2 1 1 ]
  23:    [ 2 1 3 2 ]  2      [ 1 . 2 1 ]
  24:    [ 1 2 3 2 ]  1      [ . 1 2 1 ]
  25:    [ 1 1 4 2 ]  2      [ . . 3 1 ]
  26:    [ 3 1 1 3 ]  3      [ 2 . . 2 ]
  27:    [ 2 2 1 3 ]  1      [ 1 1 . 2 ]
  28:    [ 1 3 1 3 ]  1      [ . 2 . 2 ]
  29:    [ 2 1 2 3 ]  2      [ 1 . 1 2 ]
  30:    [ 1 2 2 3 ]  1      [ . 1 1 2 ]
  31:    [ 1 1 3 3 ]  2      [ . . 2 2 ]
  32:    [ 2 1 1 4 ]  3      [ 1 . . 3 ]
  33:    [ 1 2 1 4 ]  1      [ . 1 . 3 ]
  34:    [ 1 1 2 4 ]  2      [ . . 1 3 ]
  35:    [ 1 1 1 5 ]  3      [ . . . 4 ]
 ct=35
