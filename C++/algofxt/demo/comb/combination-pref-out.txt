// output of ./demo/comb/combination-pref-demo.cc:
// Description:
//% Combinations via prefix shifts ("cool-lex" order)

arg 1: 7 == n  [Combinations (n choose k)]  default=7
arg 2: 3 == k  [ k>=1]  default=3
   1:    111....    { 0, 1, 2 }
   2:    .111...    { 1, 2, 3 }
   3:    1.11...    { 0, 2, 3 }
   4:    11.1...    { 0, 1, 3 }
   5:    .11.1..    { 1, 2, 4 }
   6:    1.1.1..    { 0, 2, 4 }
   7:    .1.11..    { 1, 3, 4 }
   8:    ..111..    { 2, 3, 4 }
   9:    1..11..    { 0, 3, 4 }
  10:    11..1..    { 0, 1, 4 }
  11:    .11..1.    { 1, 2, 5 }
  12:    1.1..1.    { 0, 2, 5 }
  13:    .1.1.1.    { 1, 3, 5 }
  14:    ..11.1.    { 2, 3, 5 }
  15:    1..1.1.    { 0, 3, 5 }
  16:    .1..11.    { 1, 4, 5 }
  17:    ..1.11.    { 2, 4, 5 }
  18:    ...111.    { 3, 4, 5 }
  19:    1...11.    { 0, 4, 5 }
  20:    11...1.    { 0, 1, 5 }
  21:    .11...1    { 1, 2, 6 }
  22:    1.1...1    { 0, 2, 6 }
  23:    .1.1..1    { 1, 3, 6 }
  24:    ..11..1    { 2, 3, 6 }
  25:    1..1..1    { 0, 3, 6 }
  26:    .1..1.1    { 1, 4, 6 }
  27:    ..1.1.1    { 2, 4, 6 }
  28:    ...11.1    { 3, 4, 6 }
  29:    1...1.1    { 0, 4, 6 }
  30:    .1...11    { 1, 5, 6 }
  31:    ..1..11    { 2, 5, 6 }
  32:    ...1.11    { 3, 5, 6 }
  33:    ....111    { 4, 5, 6 }
  34:    1....11    { 0, 5, 6 }
  35:    11....1    { 0, 1, 6 }
 ct = 35
