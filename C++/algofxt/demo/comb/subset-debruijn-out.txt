// output of ./demo/comb/subset-debruijn-demo.cc:
// Description:
//% Generate all subsets in De Bruijn order.

arg 1: 5 == n  [Size of the set]  default=5
arg 2: 0 == zq  [Option: alternative order]  default=0
     0:    { 0,  ,  ,  ,   }   #=1    { 0 }
     1:    {  , 1,  ,  ,   }   #=1    { 1 }
     2:    {  ,  , 2,  ,   }   #=1    { 2 }
     3:    {  ,  ,  , 3,   }   #=1    { 3 }
     4:    { 0,  ,  ,  , 4 }   #=2    { 0, 4 }
     5:    { 0, 1,  ,  ,   }   #=2    { 0, 1 }
     6:    {  , 1, 2,  ,   }   #=2    { 1, 2 }
     7:    {  ,  , 2, 3,   }   #=2    { 2, 3 }
     8:    { 0,  ,  , 3, 4 }   #=3    { 0, 3, 4 }
     9:    {  , 1,  ,  , 4 }   #=2    { 1, 4 }
    10:    { 0,  , 2,  ,   }   #=2    { 0, 2 }
    11:    {  , 1,  , 3,   }   #=2    { 1, 3 }
    12:    {  ,  , 2,  , 4 }   #=2    { 2, 4 }
    13:    { 0,  ,  , 3,   }   #=2    { 0, 3 }
    14:    { 0, 1,  ,  , 4 }   #=3    { 0, 1, 4 }
    15:    { 0, 1, 2,  ,   }   #=3    { 0, 1, 2 }
    16:    {  , 1, 2, 3,   }   #=3    { 1, 2, 3 }
    17:    { 0,  , 2, 3, 4 }   #=4    { 0, 2, 3, 4 }
    18:    {  , 1,  , 3, 4 }   #=3    { 1, 3, 4 }
    19:    { 0,  , 2,  , 4 }   #=3    { 0, 2, 4 }
    20:    { 0, 1,  , 3,   }   #=3    { 0, 1, 3 }
    21:    {  , 1, 2,  , 4 }   #=3    { 1, 2, 4 }
    22:    { 0,  , 2, 3,   }   #=3    { 0, 2, 3 }
    23:    { 0, 1,  , 3, 4 }   #=4    { 0, 1, 3, 4 }
    24:    { 0, 1, 2,  , 4 }   #=4    { 0, 1, 2, 4 }
    25:    { 0, 1, 2, 3,   }   #=4    { 0, 1, 2, 3 }
    26:    { 0, 1, 2, 3, 4 }   #=5    { 0, 1, 2, 3, 4 }
    27:    {  , 1, 2, 3, 4 }   #=4    { 1, 2, 3, 4 }
    28:    {  ,  , 2, 3, 4 }   #=3    { 2, 3, 4 }
    29:    {  ,  ,  , 3, 4 }   #=2    { 3, 4 }
    30:    {  ,  ,  ,  , 4 }   #=1    { 4 }
    31:    {  ,  ,  ,  ,   }   #=0    {  }
