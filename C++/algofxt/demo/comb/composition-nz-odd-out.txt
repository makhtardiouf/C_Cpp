// output of ./demo/comb/composition-nz-odd-demo.cc:
// Description:
//% Compositions of n into positive odd parts, lexicographic order.
//% Loopless algorithm.
//% Cf. OEIS sequence A000045.

arg 1: 10 == n  [compositions of n into odd parts]  default=10
  1: [10]  [ 1 1 1 1 1 1 1 1 1 1 ]
  2: [ 8]  [ 1 1 1 1 1 1 1 3 ]
  3: [ 8]  [ 1 1 1 1 1 1 3 1 ]
  4: [ 8]  [ 1 1 1 1 1 3 1 1 ]
  5: [ 6]  [ 1 1 1 1 1 5 ]
  6: [ 8]  [ 1 1 1 1 3 1 1 1 ]
  7: [ 6]  [ 1 1 1 1 3 3 ]
  8: [ 6]  [ 1 1 1 1 5 1 ]
  9: [ 8]  [ 1 1 1 3 1 1 1 1 ]
 10: [ 6]  [ 1 1 1 3 1 3 ]
 11: [ 6]  [ 1 1 1 3 3 1 ]
 12: [ 6]  [ 1 1 1 5 1 1 ]
 13: [ 4]  [ 1 1 1 7 ]
 14: [ 8]  [ 1 1 3 1 1 1 1 1 ]
 15: [ 6]  [ 1 1 3 1 1 3 ]
 16: [ 6]  [ 1 1 3 1 3 1 ]
 17: [ 6]  [ 1 1 3 3 1 1 ]
 18: [ 4]  [ 1 1 3 5 ]
 19: [ 6]  [ 1 1 5 1 1 1 ]
 20: [ 4]  [ 1 1 5 3 ]
 21: [ 4]  [ 1 1 7 1 ]
 22: [ 8]  [ 1 3 1 1 1 1 1 1 ]
 23: [ 6]  [ 1 3 1 1 1 3 ]
 24: [ 6]  [ 1 3 1 1 3 1 ]
 25: [ 6]  [ 1 3 1 3 1 1 ]
 26: [ 4]  [ 1 3 1 5 ]
 27: [ 6]  [ 1 3 3 1 1 1 ]
 28: [ 4]  [ 1 3 3 3 ]
 29: [ 4]  [ 1 3 5 1 ]
 30: [ 6]  [ 1 5 1 1 1 1 ]
 31: [ 4]  [ 1 5 1 3 ]
 32: [ 4]  [ 1 5 3 1 ]
 33: [ 4]  [ 1 7 1 1 ]
 34: [ 2]  [ 1 9 ]
 35: [ 8]  [ 3 1 1 1 1 1 1 1 ]
 36: [ 6]  [ 3 1 1 1 1 3 ]
 37: [ 6]  [ 3 1 1 1 3 1 ]
 38: [ 6]  [ 3 1 1 3 1 1 ]
 39: [ 4]  [ 3 1 1 5 ]
 40: [ 6]  [ 3 1 3 1 1 1 ]
 41: [ 4]  [ 3 1 3 3 ]
 42: [ 4]  [ 3 1 5 1 ]
 43: [ 6]  [ 3 3 1 1 1 1 ]
 44: [ 4]  [ 3 3 1 3 ]
 45: [ 4]  [ 3 3 3 1 ]
 46: [ 4]  [ 3 5 1 1 ]
 47: [ 2]  [ 3 7 ]
 48: [ 6]  [ 5 1 1 1 1 1 ]
 49: [ 4]  [ 5 1 1 3 ]
 50: [ 4]  [ 5 1 3 1 ]
 51: [ 4]  [ 5 3 1 1 ]
 52: [ 2]  [ 5 5 ]
 53: [ 4]  [ 7 1 1 1 ]
 54: [ 2]  [ 7 3 ]
 55: [ 2]  [ 9 1 ]
 ct=55
