// output of ./demo/comb/shift-subsets-demo.cc:
// Description:
//% Shifts-order for subsets of a binary word.

arg 1: 6 == n  [Number of bits]  default=6
arg 2: 1 == q  [what to generate:  0==>shifts-order, 1==>Gray shifts-order, 2==>Fibonacci words]  default=1
arg 3: 0 == c  [c-subsets (0==>all)]  default=0

   1:  .....1   1
   2:  ....1.   1
   3:  ...1..   1
   4:  ..1...   1
   5:  .1....   1
   6:  1.....   1
   7:  1....1   2
   8:  1...11   3
   9:  1...1.   2
  10:  .1...1   2
  11:  .1..11   3
  12:  1..11.   3
  13:  1..111   4
  14:  1..1.1   3
  15:  1..1..   2
  16:  .1..1.   2
  17:  ..1..1   2
  18:  ..1.11   3
  19:  .1.11.   3
  20:  1.11..   3
  21:  1.11.1   4
  22:  1.1111   5
  23:  1.111.   4
  24:  .1.111   4
  25:  .1.1.1   3
  26:  1.1.1.   3
  27:  1.1.11   4
  28:  1.1..1   3
  29:  1.1...   2
  30:  .1.1..   2
  31:  ..1.1.   2
  32:  ...1.1   2
  33:  ...111   3
  34:  ..111.   3
  35:  .111..   3
  36:  111...   3
  37:  111..1   4
  38:  111.11   5
  39:  111.1.   4
  40:  .111.1   4
  41:  .11111   5
  42:  11111.   5
  43:  111111   6
  44:  1111.1   5
  45:  1111..   4
  46:  .1111.   4
  47:  ..1111   4
  48:  ..11.1   3
  49:  .11.1.   3
  50:  11.1..   3
  51:  11.1.1   4
  52:  11.111   5
  53:  11.11.   4
  54:  .11.11   4
  55:  .11..1   3
  56:  11..1.   3
  57:  11..11   4
  58:  11...1   3
  59:  11....   2
  60:  .11...   2
  61:  ..11..   2
  62:  ...11.   2
  63:  ....11   2

