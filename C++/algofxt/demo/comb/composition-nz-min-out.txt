// output of ./demo/comb/composition-nz-min-demo.cc:
// Description:
//% Compositions of n into positive parts >= mi.
//% Lexicographic order.

arg 1: 11 == n  [compositions of n into parts >= mi]  default=11
arg 2: 2 == mi  [parts >= mi]  default=2
   1:  [ 5]  [ 2 2 2 2 3 ]
   2:  [ 5]  [ 2 2 2 3 2 ]
   3:  [ 4]  [ 2 2 2 5 ]
   4:  [ 5]  [ 2 2 3 2 2 ]
   5:  [ 4]  [ 2 2 3 4 ]
   6:  [ 4]  [ 2 2 4 3 ]
   7:  [ 4]  [ 2 2 5 2 ]
   8:  [ 3]  [ 2 2 7 ]
   9:  [ 5]  [ 2 3 2 2 2 ]
  10:  [ 4]  [ 2 3 2 4 ]
  11:  [ 4]  [ 2 3 3 3 ]
  12:  [ 4]  [ 2 3 4 2 ]
  13:  [ 3]  [ 2 3 6 ]
  14:  [ 4]  [ 2 4 2 3 ]
  15:  [ 4]  [ 2 4 3 2 ]
  16:  [ 3]  [ 2 4 5 ]
  17:  [ 4]  [ 2 5 2 2 ]
  18:  [ 3]  [ 2 5 4 ]
  19:  [ 3]  [ 2 6 3 ]
  20:  [ 3]  [ 2 7 2 ]
  21:  [ 2]  [ 2 9 ]
  22:  [ 5]  [ 3 2 2 2 2 ]
  23:  [ 4]  [ 3 2 2 4 ]
  24:  [ 4]  [ 3 2 3 3 ]
  25:  [ 4]  [ 3 2 4 2 ]
  26:  [ 3]  [ 3 2 6 ]
  27:  [ 4]  [ 3 3 2 3 ]
  28:  [ 4]  [ 3 3 3 2 ]
  29:  [ 3]  [ 3 3 5 ]
  30:  [ 4]  [ 3 4 2 2 ]
  31:  [ 3]  [ 3 4 4 ]
  32:  [ 3]  [ 3 5 3 ]
  33:  [ 3]  [ 3 6 2 ]
  34:  [ 2]  [ 3 8 ]
  35:  [ 4]  [ 4 2 2 3 ]
  36:  [ 4]  [ 4 2 3 2 ]
  37:  [ 3]  [ 4 2 5 ]
  38:  [ 4]  [ 4 3 2 2 ]
  39:  [ 3]  [ 4 3 4 ]
  40:  [ 3]  [ 4 4 3 ]
  41:  [ 3]  [ 4 5 2 ]
  42:  [ 2]  [ 4 7 ]
  43:  [ 4]  [ 5 2 2 2 ]
  44:  [ 3]  [ 5 2 4 ]
  45:  [ 3]  [ 5 3 3 ]
  46:  [ 3]  [ 5 4 2 ]
  47:  [ 2]  [ 5 6 ]
  48:  [ 3]  [ 6 2 3 ]
  49:  [ 3]  [ 6 3 2 ]
  50:  [ 2]  [ 6 5 ]
  51:  [ 3]  [ 7 2 2 ]
  52:  [ 2]  [ 7 4 ]
  53:  [ 2]  [ 8 3 ]
  54:  [ 2]  [ 9 2 ]
  55:  [ 1]  [ 11 ]
 ct=55
