// output of ./demo/comb/perm-rec-demo.cc:
// Description:
//% All cyclic permutations by an recursive algorithm.

arg 1: 5 == n  [Number of elements to permute]  default=5
arg 2: 1 == cq  [Whether to generate only cyclic permutations]  default=1
   0:    [ 1 2 3 4 . ]  (0, 1, 2, 3, 4)         [ 4 . 1 2 3 ]    [ 1 1 1 1 ]
   1:    [ 1 2 4 . 3 ]  (0, 1, 2, 4, 3)         [ 3 . 1 4 2 ]    [ 1 1 2 1 ]
   2:    [ 1 3 . 4 2 ]  (0, 1, 3, 4, 2)         [ 2 . 4 1 3 ]    [ 1 2 1 1 ]
   3:    [ 1 3 4 2 . ]  (0, 1, 3, 2, 4)         [ 4 . 3 1 2 ]    [ 1 2 2 1 ]
   4:    [ 1 4 3 . 2 ]  (0, 1, 4, 2, 3)         [ 3 . 4 2 1 ]    [ 1 3 1 1 ]
   5:    [ 1 4 . 2 3 ]  (0, 1, 4, 3, 2)         [ 2 . 3 4 1 ]    [ 1 3 2 1 ]
   6:    [ 2 . 3 4 1 ]  (0, 2, 3, 4, 1)         [ 1 4 . 2 3 ]    [ 2 1 1 1 ]
   7:    [ 2 . 4 1 3 ]  (0, 2, 4, 3, 1)         [ 1 3 . 4 2 ]    [ 2 1 2 1 ]
   8:    [ 2 3 1 4 . ]  (0, 2, 1, 3, 4)         [ 4 2 . 1 3 ]    [ 2 2 1 1 ]
   9:    [ 2 3 4 . 1 ]  (0, 2, 4, 1, 3)         [ 3 4 . 1 2 ]    [ 2 2 2 1 ]
  10:    [ 2 4 3 1 . ]  (0, 2, 3, 1, 4)         [ 4 3 . 2 1 ]    [ 2 3 1 1 ]
  11:    [ 2 4 1 . 3 ]  (0, 2, 1, 4, 3)         [ 3 2 . 4 1 ]    [ 2 3 2 1 ]
  12:    [ 3 2 . 4 1 ]  (0, 3, 4, 1, 2)         [ 2 4 1 . 3 ]    [ 3 1 1 1 ]
  13:    [ 3 2 4 1 . ]  (0, 3, 1, 2, 4)         [ 4 3 1 . 2 ]    [ 3 1 2 1 ]
  14:    [ 3 . 1 4 2 ]  (0, 3, 4, 2, 1)         [ 1 2 4 . 3 ]    [ 3 2 1 1 ]
  15:    [ 3 . 4 2 1 ]  (0, 3, 2, 4, 1)         [ 1 4 3 . 2 ]    [ 3 2 2 1 ]
  16:    [ 3 4 . 1 2 ]  (0, 3, 1, 4, 2)         [ 2 3 4 . 1 ]    [ 3 3 1 1 ]
  17:    [ 3 4 1 2 . ]  (0, 3, 2, 1, 4)         [ 4 2 3 . 1 ]    [ 3 3 2 1 ]
  18:    [ 4 2 3 . 1 ]  (0, 4, 1, 2, 3)         [ 3 4 1 2 . ]    [ 4 1 1 1 ]
  19:    [ 4 2 . 1 3 ]  (0, 4, 3, 1, 2)         [ 2 3 1 4 . ]    [ 4 1 2 1 ]
  20:    [ 4 3 1 . 2 ]  (0, 4, 2, 1, 3)         [ 3 2 4 1 . ]    [ 4 2 1 1 ]
  21:    [ 4 3 . 2 1 ]  (0, 4, 1, 3, 2)         [ 2 4 3 1 . ]    [ 4 2 2 1 ]
  22:    [ 4 . 3 1 2 ]  (0, 4, 2, 3, 1)         [ 1 3 4 2 . ]    [ 4 3 1 1 ]
  23:    [ 4 . 1 2 3 ]  (0, 4, 3, 2, 1)         [ 1 2 3 4 . ]    [ 4 3 2 1 ]
ct=24
