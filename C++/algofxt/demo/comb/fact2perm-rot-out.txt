// output of ./demo/comb/fact2perm-rot-demo.cc:
// Description:
//% Generate all permutations from mixed radix (factorial) numbers.

arg 1: 4 == n  [Number of elements to permute]  default=4
arg 2: 0 == rq  [Whether to use rising factorial base.]  default=0
 Nines: [ 3 2 1 ]
   0:    [ . . . ]    [ . 1 2 3 ]          [ . 1 2 3 ]
   1:    [ 1 . . ]    [ 1 2 3 . ]          [ 3 . 1 2 ]
   2:    [ 2 . . ]    [ 2 3 . 1 ]          [ 2 3 . 1 ]
   3:    [ 3 . . ]    [ 3 . 1 2 ]          [ 1 2 3 . ]
   4:    [ . 1 . ]    [ . 2 3 1 ]          [ . 3 1 2 ]
   5:    [ 1 1 . ]    [ 1 3 . 2 ]          [ 2 . 3 1 ]
   6:    [ 2 1 . ]    [ 2 . 1 3 ]          [ 1 2 . 3 ]
   7:    [ 3 1 . ]    [ 3 1 2 . ]          [ 3 1 2 . ]
   8:    [ . 2 . ]    [ . 3 1 2 ]          [ . 2 3 1 ]
   9:    [ 1 2 . ]    [ 1 . 2 3 ]          [ 1 . 2 3 ]
  10:    [ 2 2 . ]    [ 2 1 3 . ]          [ 3 1 . 2 ]
  11:    [ 3 2 . ]    [ 3 2 . 1 ]          [ 2 3 1 . ]
  12:    [ . . 1 ]    [ . 1 3 2 ]          [ . 1 3 2 ]
  13:    [ 1 . 1 ]    [ 1 2 . 3 ]          [ 2 . 1 3 ]
  14:    [ 2 . 1 ]    [ 2 3 1 . ]          [ 3 2 . 1 ]
  15:    [ 3 . 1 ]    [ 3 . 2 1 ]          [ 1 3 2 . ]
  16:    [ . 1 1 ]    [ . 2 1 3 ]          [ . 2 1 3 ]
  17:    [ 1 1 1 ]    [ 1 3 2 . ]          [ 3 . 2 1 ]
  18:    [ 2 1 1 ]    [ 2 . 3 1 ]          [ 1 3 . 2 ]
  19:    [ 3 1 1 ]    [ 3 1 . 2 ]          [ 2 1 3 . ]
  20:    [ . 2 1 ]    [ . 3 2 1 ]          [ . 3 2 1 ]
  21:    [ 1 2 1 ]    [ 1 . 3 2 ]          [ 1 . 3 2 ]
  22:    [ 2 2 1 ]    [ 2 1 . 3 ]          [ 2 1 . 3 ]
  23:    [ 3 2 1 ]    [ 3 2 1 . ]          [ 3 2 1 . ]
