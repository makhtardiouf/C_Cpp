// output of ./demo/comb/ascent-nonflat-rgs-demo.cc:
// Description:
//% Ascent sequences (restricted growth strings, RGS)
//% without flat steps (i.e., no two adjacent digits are equal), lexicographic order.
//% An ascent sequence is a sequence [d(1), d(2), ..., d(n)] where d(k)>=0
//% and d(k) <= asc([d(1), d(2), ..., d(k-1)]) and asc(.) counts the number
//% of ascents of its argument.
//% Cf. OEIS sequence A138265.

arg 1: 6 == n  [Length of strings]  default=6
   1:    [ . 1 . 1 . 1 ]   6
   2:    [ . 1 . 1 . 2 ]   5
   3:    [ . 1 . 1 . 3 ]   5
   4:    [ . 1 . 1 2 . ]   4
   5:    [ . 1 . 1 2 1 ]   5
   6:    [ . 1 . 1 2 3 ]   5
   7:    [ . 1 . 1 2 4 ]   5
   8:    [ . 1 . 1 3 . ]   4
   9:    [ . 1 . 1 3 1 ]   5
  10:    [ . 1 . 1 3 2 ]   5
  11:    [ . 1 . 1 3 4 ]   5
  12:    [ . 1 . 2 . 1 ]   3
  13:    [ . 1 . 2 . 2 ]   5
  14:    [ . 1 . 2 . 3 ]   5
  15:    [ . 1 . 2 1 . ]   4
  16:    [ . 1 . 2 1 2 ]   5
  17:    [ . 1 . 2 1 3 ]   5
  18:    [ . 1 . 2 3 . ]   4
  19:    [ . 1 . 2 3 1 ]   5
  20:    [ . 1 . 2 3 2 ]   5
  21:    [ . 1 . 2 3 4 ]   5
  22:    [ . 1 2 . 1 . ]   2
  23:    [ . 1 2 . 1 2 ]   5
  24:    [ . 1 2 . 1 3 ]   5
  25:    [ . 1 2 . 1 4 ]   5
  26:    [ . 1 2 . 2 . ]   4
  27:    [ . 1 2 . 2 1 ]   5
  28:    [ . 1 2 . 2 3 ]   5
  29:    [ . 1 2 . 2 4 ]   5
  30:    [ . 1 2 . 3 . ]   4
  31:    [ . 1 2 . 3 1 ]   5
  32:    [ . 1 2 . 3 2 ]   5
  33:    [ . 1 2 . 3 4 ]   5
  34:    [ . 1 2 1 . 1 ]   3
  35:    [ . 1 2 1 . 2 ]   5
  36:    [ . 1 2 1 . 3 ]   5
  37:    [ . 1 2 1 2 . ]   4
  38:    [ . 1 2 1 2 1 ]   5
  39:    [ . 1 2 1 2 3 ]   5
  40:    [ . 1 2 1 2 4 ]   5
  41:    [ . 1 2 1 3 . ]   4
  42:    [ . 1 2 1 3 1 ]   5
  43:    [ . 1 2 1 3 2 ]   5
  44:    [ . 1 2 1 3 4 ]   5
  45:    [ . 1 2 3 . 1 ]   3
  46:    [ . 1 2 3 . 2 ]   5
  47:    [ . 1 2 3 . 3 ]   5
  48:    [ . 1 2 3 . 4 ]   5
  49:    [ . 1 2 3 1 . ]   4
  50:    [ . 1 2 3 1 2 ]   5
  51:    [ . 1 2 3 1 3 ]   5
  52:    [ . 1 2 3 1 4 ]   5
  53:    [ . 1 2 3 2 . ]   4
  54:    [ . 1 2 3 2 1 ]   5
  55:    [ . 1 2 3 2 3 ]   5
  56:    [ . 1 2 3 2 4 ]   5
  57:    [ . 1 2 3 4 . ]   4
  58:    [ . 1 2 3 4 1 ]   5
  59:    [ . 1 2 3 4 2 ]   5
  60:    [ . 1 2 3 4 3 ]   5
  61:    [ . 1 2 3 4 5 ]   5
 ct=61
