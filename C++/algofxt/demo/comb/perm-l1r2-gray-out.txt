// output of ./demo/comb/perm-l1r2-gray-demo.cc:
// Description:
//% Gray code for permutations where i-1<=p(i)<=i+2 for all i, generated via
//% Gray code for falling factorial numbers that are tribonacci numbers

arg 1: 6 == n  [Number of elements]  default=6
   1:    1 1 . . 1    [ 1 2 0 3 5 4 ]    [ 2 0 1 3 5 4 ]     2 . . . 1
   2:    1 1 . . .    [ 1 2 0 3 4 5 ]    [ 2 0 1 3 4 5 ]     2 . . . .
   3:    1 1 . 1 .    [ 1 2 0 4 3 5 ]    [ 2 0 1 4 3 5 ]     2 . . 1 .
   4:    1 1 . 1 1    [ 1 2 0 4 5 3 ]    [ 2 0 1 5 3 4 ]     2 . . 2 .
   5:    1 . . 1 1    [ 1 0 2 4 5 3 ]    [ 1 0 2 5 3 4 ]     1 . . 2 .
   6:    1 . . 1 .    [ 1 0 2 4 3 5 ]    [ 1 0 2 4 3 5 ]     1 . . 1 .
   7:    1 . . . .    [ 1 0 2 3 4 5 ]    [ 1 0 2 3 4 5 ]     1 . . . .
   8:    1 . . . 1    [ 1 0 2 3 5 4 ]    [ 1 0 2 3 5 4 ]     1 . . . 1
   9:    1 . 1 . 1    [ 1 0 3 2 5 4 ]    [ 1 0 3 2 5 4 ]     1 . 1 . 1
  10:    1 . 1 . .    [ 1 0 3 2 4 5 ]    [ 1 0 3 2 4 5 ]     1 . 1 . .
  11:    1 . 1 1 .    [ 1 0 3 4 2 5 ]    [ 1 0 4 2 3 5 ]     1 . 2 . .
  12:    . . 1 1 .    [ 0 1 3 4 2 5 ]    [ 0 1 4 2 3 5 ]     . . 2 . .
  13:    . . 1 . .    [ 0 1 3 2 4 5 ]    [ 0 1 3 2 4 5 ]     . . 1 . .
  14:    . . 1 . 1    [ 0 1 3 2 5 4 ]    [ 0 1 3 2 5 4 ]     . . 1 . 1
  15:    . . . . 1    [ 0 1 2 3 5 4 ]    [ 0 1 2 3 5 4 ]     . . . . 1
  16:    . . . . .    [ 0 1 2 3 4 5 ]    [ 0 1 2 3 4 5 ]     . . . . .
  17:    . . . 1 .    [ 0 1 2 4 3 5 ]    [ 0 1 2 4 3 5 ]     . . . 1 .
  18:    . . . 1 1    [ 0 1 2 4 5 3 ]    [ 0 1 2 5 3 4 ]     . . . 2 .
  19:    . 1 . 1 1    [ 0 2 1 4 5 3 ]    [ 0 2 1 5 3 4 ]     . 1 . 2 .
  20:    . 1 . 1 .    [ 0 2 1 4 3 5 ]    [ 0 2 1 4 3 5 ]     . 1 . 1 .
  21:    . 1 . . .    [ 0 2 1 3 4 5 ]    [ 0 2 1 3 4 5 ]     . 1 . . .
  22:    . 1 . . 1    [ 0 2 1 3 5 4 ]    [ 0 2 1 3 5 4 ]     . 1 . . 1
  23:    . 1 1 . 1    [ 0 2 3 1 5 4 ]    [ 0 3 1 2 5 4 ]     . 2 . . 1
  24:    . 1 1 . .    [ 0 2 3 1 4 5 ]    [ 0 3 1 2 4 5 ]     . 2 . . .
ct=24
