// output of ./demo/comb/partition-asc-2rep-subset-lex-demo.cc:
// Description:
//% Integer partitions where parts have multiplicity at most 2.
//% Representation as weakly ascending list of parts.
//% Subset-lex order.
//% Loopless algorithm.
//% Cf. OEIS sequence A000726.

arg 1: 14 == n  [integer partitions of n]  default=14
arg 2: 0 == aa  [Whether to render as ASCII art]  default=0
   1:   [ 1 13 ]
   2:   [ 1 1 12 ]
   3:   [ 1 1 2 10 ]
   4:   [ 1 1 2 2 8 ]
   5:   [ 1 1 2 2 3 5 ]
   6:   [ 1 1 2 2 4 4 ]
   7:   [ 1 1 2 3 7 ]
   8:   [ 1 1 2 3 3 4 ]
   9:   [ 1 1 2 4 6 ]
  10:   [ 1 1 2 5 5 ]
  11:   [ 1 1 3 9 ]
  12:   [ 1 1 3 3 6 ]
  13:   [ 1 1 3 4 5 ]
  14:   [ 1 1 4 8 ]
  15:   [ 1 1 5 7 ]
  16:   [ 1 1 6 6 ]
  17:   [ 1 2 11 ]
  18:   [ 1 2 2 9 ]
  19:   [ 1 2 2 3 6 ]
  20:   [ 1 2 2 4 5 ]
  21:   [ 1 2 3 8 ]
  22:   [ 1 2 3 3 5 ]
  23:   [ 1 2 3 4 4 ]
  24:   [ 1 2 4 7 ]
  25:   [ 1 2 5 6 ]
  26:   [ 1 3 10 ]
  27:   [ 1 3 3 7 ]
  28:   [ 1 3 4 6 ]
  29:   [ 1 3 5 5 ]
  30:   [ 1 4 9 ]
  31:   [ 1 4 4 5 ]
  32:   [ 1 5 8 ]
  33:   [ 1 6 7 ]
  34:   [ 2 12 ]
  35:   [ 2 2 10 ]
  36:   [ 2 2 3 7 ]
  37:   [ 2 2 3 3 4 ]
  38:   [ 2 2 4 6 ]
  39:   [ 2 2 5 5 ]
  40:   [ 2 3 9 ]
  41:   [ 2 3 3 6 ]
  42:   [ 2 3 4 5 ]
  43:   [ 2 4 8 ]
  44:   [ 2 5 7 ]
  45:   [ 2 6 6 ]
  46:   [ 3 11 ]
  47:   [ 3 3 8 ]
  48:   [ 3 3 4 4 ]
  49:   [ 3 4 7 ]
  50:   [ 3 5 6 ]
  51:   [ 4 10 ]
  52:   [ 4 4 6 ]
  53:   [ 4 5 5 ]
  54:   [ 5 9 ]
  55:   [ 6 8 ]
  56:   [ 7 7 ]
  57:   [ 14 ]
 ct=57
