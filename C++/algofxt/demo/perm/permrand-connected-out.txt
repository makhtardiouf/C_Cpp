// output of ./demo/perm/permrand-connected-demo.cc:
// Description:
//% Random connected (indecomposable) permutations

arg 1: 10 == n  [Number of elements.]  default=10
arg 2: 15 == rep  [This many derangements.]  default=15
   f=[ 6 8 7 3 2 9 5 1 4 0 ]    (0, 6, 5, 9) (1, 8, 4, 2, 7) (3)        
   f=[ 7 6 0 5 1 4 9 3 8 2 ]    (0, 7, 3, 5, 4, 1, 6, 9, 2) (8)         
   f=[ 8 3 2 0 5 4 1 7 9 6 ]    (0, 8, 9, 6, 1, 3) (2) (4, 5) (7)       
   f=[ 3 8 5 7 2 9 0 4 1 6 ]    (0, 3, 7, 4, 2, 5, 9, 6) (1, 8)         
   f=[ 2 3 9 5 6 1 8 7 0 4 ]    (0, 2, 9, 4, 6, 8) (1, 3, 5) (7)        
   f=[ 3 1 5 8 7 4 9 6 2 0 ]    (0, 3, 8, 2, 5, 4, 7, 6, 9) (1)         
   f=[ 9 5 3 4 8 1 0 6 2 7 ]    (0, 9, 7, 6) (1, 5) (2, 3, 4, 8)        
   f=[ 8 3 2 9 4 5 1 0 7 6 ]    (0, 8, 7) (1, 3, 9, 6) (2) (4) (5)      
   f=[ 4 1 9 0 5 8 3 7 2 6 ]    (0, 4, 5, 8, 2, 9, 6, 3) (1) (7)        
   f=[ 1 5 0 2 9 6 7 8 3 4 ]    (0, 1, 5, 6, 7, 8, 3, 2) (4, 9)         
   f=[ 5 0 6 3 2 1 9 8 7 4 ]    (0, 5, 1) (2, 6, 9, 4) (3) (7, 8)       
   f=[ 2 8 9 3 1 5 4 0 6 7 ]    (0, 2, 9, 7) (1, 8, 6, 4) (3) (5)       
   f=[ 3 6 5 0 7 4 8 2 9 1 ]    (0, 3) (1, 6, 8, 9) (2, 5, 4, 7)        
   f=[ 7 3 5 6 0 9 4 1 2 8 ]    (0, 7, 1, 3, 6, 4) (2, 5, 9, 8)         
   f=[ 9 7 8 3 1 5 2 6 0 4 ]    (0, 9, 4, 1, 7, 6, 2, 8) (3) (5)        
