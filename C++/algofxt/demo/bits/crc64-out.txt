// output of ./demo/bits/crc64-demo.cc:
// Description:
//% Cyclic Redundancy Check (CRC) with 64 bits.

arg 1: 245 == b  [Byte to feed into CRC]  default=245
arg 2: -1 == nc  [ If nc>=0 ==> alternative modulo polynomial, (nc<16).]  default=-1

          c= 0x800000000000000d
      = 1...........................................................11.1

 ------- bit-wise computation:
   0    crc= 0xffffffffffffffff
      = 1111111111111111111111111111111111111111111111111111111111111111   1
   1    crc= 0x7fffffffffffffff
      = .111111111111111111111111111111111111111111111111111111111111111   0
   2    crc= 0xbffffffffffffff2
      = 1.1111111111111111111111111111111111111111111111111111111111..1.   1
   3    crc= 0xdffffffffffffff4
      = 11.111111111111111111111111111111111111111111111111111111111.1..   0
   4    crc= 0x6ffffffffffffffa
      = .11.111111111111111111111111111111111111111111111111111111111.1.   1
   5    crc= 0xb7fffffffffffff0
      = 1.11.1111111111111111111111111111111111111111111111111111111....   1
   6    crc= 0xdbfffffffffffff5
      = 11.11.111111111111111111111111111111111111111111111111111111.1.1   1
   7    crc= 0x6dfffffffffffffa
      = .11.11.111111111111111111111111111111111111111111111111111111.1.   1
   8    crc= 0xb6fffffffffffff0
      = 1.11.11.1111111111111111111111111111111111111111111111111111....   0

 ------- byte-add and 8 x shift computation:
   0    crc= 0xffffffffffffff0a
      = 11111111111111111111111111111111111111111111111111111111....1.1.
   1    crc= 0x7fffffffffffff85
      = .11111111111111111111111111111111111111111111111111111111....1.1
   2    crc= 0xbfffffffffffffcf
      = 1.11111111111111111111111111111111111111111111111111111111..1111
   3    crc= 0xdfffffffffffffea
      = 11.11111111111111111111111111111111111111111111111111111111.1.1.
   4    crc= 0x6ffffffffffffff5
      = .11.11111111111111111111111111111111111111111111111111111111.1.1
   5    crc= 0xb7fffffffffffff7
      = 1.11.1111111111111111111111111111111111111111111111111111111.111
   6    crc= 0xdbfffffffffffff6
      = 11.11.111111111111111111111111111111111111111111111111111111.11.
   7    crc= 0x6dfffffffffffffb
      = .11.11.111111111111111111111111111111111111111111111111111111.11
   8    crc= 0xb6fffffffffffff0
      = 1.11.11.1111111111111111111111111111111111111111111111111111....


 ------- computation with built-in byte_in():
 ==     crc= 0xb6fffffffffffff0
      = 1.11.11.1111111111111111111111111111111111111111111111111111....

