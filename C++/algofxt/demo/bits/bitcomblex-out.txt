// output of ./demo/bits/bitcomblex-demo.cc:
// Description:
//% Generating combinations of bits (as binary words) in lexicographic order.

arg 1: 7 == n  [Combinations (n choose k) in lexicographic order]  default=7
arg 2: 4 == k  [  (0<k<=n)]  default=4
  1:    ...1111 = { 0, 1, 2, 3 }        ....111 = { 0, 1, 2 }
  2:    ..1.111 = { 0, 1, 2, 4 }        ...1.11 = { 0, 1, 3 }
  3:    .1..111 = { 0, 1, 2, 5 }        ...11.1 = { 0, 2, 3 }
  4:    1...111 = { 0, 1, 2, 6 }        ...111. = { 1, 2, 3 }
  5:    ..11.11 = { 0, 1, 3, 4 }        ..1..11 = { 0, 1, 4 }
  6:    .1.1.11 = { 0, 1, 3, 5 }        ..1.1.1 = { 0, 2, 4 }
  7:    1..1.11 = { 0, 1, 3, 6 }        ..1.11. = { 1, 2, 4 }
  8:    .11..11 = { 0, 1, 4, 5 }        ..11..1 = { 0, 3, 4 }
  9:    1.1..11 = { 0, 1, 4, 6 }        ..11.1. = { 1, 3, 4 }
 10:    11...11 = { 0, 1, 5, 6 }        ..111.. = { 2, 3, 4 }
 11:    ..111.1 = { 0, 2, 3, 4 }        .1...11 = { 0, 1, 5 }
 12:    .1.11.1 = { 0, 2, 3, 5 }        .1..1.1 = { 0, 2, 5 }
 13:    1..11.1 = { 0, 2, 3, 6 }        .1..11. = { 1, 2, 5 }
 14:    .11.1.1 = { 0, 2, 4, 5 }        .1.1..1 = { 0, 3, 5 }
 15:    1.1.1.1 = { 0, 2, 4, 6 }        .1.1.1. = { 1, 3, 5 }
 16:    11..1.1 = { 0, 2, 5, 6 }        .1.11.. = { 2, 3, 5 }
 17:    .111..1 = { 0, 3, 4, 5 }        .11...1 = { 0, 4, 5 }
 18:    1.11..1 = { 0, 3, 4, 6 }        .11..1. = { 1, 4, 5 }
 19:    11.1..1 = { 0, 3, 5, 6 }        .11.1.. = { 2, 4, 5 }
 20:    111...1 = { 0, 4, 5, 6 }        .111... = { 3, 4, 5 }
 21:    ..1111. = { 1, 2, 3, 4 }        1....11 = { 0, 1, 6 }
 22:    .1.111. = { 1, 2, 3, 5 }        1...1.1 = { 0, 2, 6 }
 23:    1..111. = { 1, 2, 3, 6 }        1...11. = { 1, 2, 6 }
 24:    .11.11. = { 1, 2, 4, 5 }        1..1..1 = { 0, 3, 6 }
 25:    1.1.11. = { 1, 2, 4, 6 }        1..1.1. = { 1, 3, 6 }
 26:    11..11. = { 1, 2, 5, 6 }        1..11.. = { 2, 3, 6 }
 27:    .111.1. = { 1, 3, 4, 5 }        1.1...1 = { 0, 4, 6 }
 28:    1.11.1. = { 1, 3, 4, 6 }        1.1..1. = { 1, 4, 6 }
 29:    11.1.1. = { 1, 3, 5, 6 }        1.1.1.. = { 2, 4, 6 }
 30:    111..1. = { 1, 4, 5, 6 }        1.11... = { 3, 4, 6 }
 31:    .1111.. = { 2, 3, 4, 5 }        11....1 = { 0, 5, 6 }
 32:    1.111.. = { 2, 3, 4, 6 }        11...1. = { 1, 5, 6 }
 33:    11.11.. = { 2, 3, 5, 6 }        11..1.. = { 2, 5, 6 }
 34:    111.1.. = { 2, 4, 5, 6 }        11.1... = { 3, 5, 6 }
 35:    1111... = { 3, 4, 5, 6 }        111.... = { 4, 5, 6 }
