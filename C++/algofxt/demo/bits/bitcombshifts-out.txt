// output of ./demo/bits/bitcombshifts-demo.cc:
// Description:
//% bit-combinations in shifts order.

arg 1: 7 == n  [Shifts combinations (n over k):  n  (n>0)]  default=7
arg 2: 4 == k  [  (0<=k<=n)]  default=4
   1:  1111...
   2:  .1111..
   3:  ..1111.
   4:  ...1111
   5:  111.1..
   6:  .111.1.
   7:  ..111.1
   8:  111..1.
   9:  .111..1
  10:  111...1
  11:  11.11..
  12:  .11.11.
  13:  ..11.11
  14:  11.1.1.
  15:  .11.1.1
  16:  11.1..1
  17:  11..11.
  18:  .11..11
  19:  11..1.1
  20:  11...11
  21:  1.111..
  22:  .1.111.
  23:  ..1.111
  24:  1.11.1.
  25:  .1.11.1
  26:  1.11..1
  27:  1.1.11.
  28:  .1.1.11
  29:  1.1.1.1
  30:  1.1..11
  31:  1..111.
  32:  .1..111
  33:  1..11.1
  34:  1..1.11
  35:  1...111
 ct=35
