// output of ./demo/graph/graph-perm-star-transpositions-demo.cc:
// Description:
//% Gray codes through permutations with star transpositions.

arg 1: 4 == N  [Number of elements in permutations]  default=4
arg 2: 1 == jcyc  [Whether only cycles are output]  default=1
arg 3: 1 == maxnp  [stop after maxnp paths (0: never stop)]  default=1
arg 4: 0 == rnds  [if set, edge order is randomized and rnds is used as random seed]  default=0
Graph has 24 nodes, 72 edges.
Path #0:
   0:      0 == [ . 1 2 3 ]    ....       [ . 1 2 3 ]   [ . . . ]    ....
   1:      1 == [ 1 . 2 3 ]    11..       [ 1 . 2 3 ]   [ 1 . . ]    11..
   2:      3 == [ 2 . 1 3 ]    1.1.       [ 1 2 . 3 ]   [ . 2 . ]    .11.
   3:      2 == [ . 2 1 3 ]    11..       [ . 2 1 3 ]   [ . 1 . ]    1.1.
   4:      4 == [ 1 2 . 3 ]    1.1.       [ 2 . 1 3 ]   [ 1 1 . ]    11..
   5:      5 == [ 2 1 . 3 ]    11..       [ 2 1 . 3 ]   [ 1 2 . ]    .11.
   6:     11 == [ 3 1 . 2 ]    1..1       [ 2 1 3 . ]   [ 1 . 3 ]    ..11
   7:      6 == [ . 1 3 2 ]    1.1.       [ . 1 3 2 ]   [ . . 1 ]    1..1
   8:      7 == [ 1 . 3 2 ]    11..       [ 1 . 3 2 ]   [ 1 . 1 ]    11..
   9:      9 == [ 3 . 1 2 ]    1.1.       [ 1 2 3 . ]   [ . . 3 ]    .1.1
  10:      8 == [ . 3 1 2 ]    11..       [ . 2 3 1 ]   [ . . 2 ]    1..1
  11:     10 == [ 1 3 . 2 ]    1.1.       [ 2 . 3 1 ]   [ 1 . 2 ]    11..
  12:     16 == [ 2 3 . 1 ]    1..1       [ 2 3 . 1 ]   [ . 2 2 ]    .11.
  13:     17 == [ 3 2 . 1 ]    11..       [ 2 3 1 . ]   [ . 2 3 ]    ..11
  14:     12 == [ . 2 3 1 ]    1.1.       [ . 3 1 2 ]   [ . 1 1 ]    1..1
  15:     13 == [ 2 . 3 1 ]    11..       [ 1 3 . 2 ]   [ . 2 1 ]    1.1.
  16:     15 == [ 3 . 2 1 ]    1.1.       [ 1 3 2 . ]   [ . 1 3 ]    ..11
  17:     14 == [ . 3 2 1 ]    11..       [ . 3 2 1 ]   [ . 1 2 ]    1..1
  18:     20 == [ 1 3 2 . ]    1..1       [ 3 . 2 1 ]   [ 1 1 2 ]    11..
  19:     22 == [ 2 3 1 . ]    1.1.       [ 3 2 . 1 ]   [ 1 2 2 ]    .11.
  20:     23 == [ 3 2 1 . ]    11..       [ 3 2 1 . ]   [ 1 2 3 ]    ..11
  21:     18 == [ 1 2 3 . ]    1.1.       [ 3 . 1 2 ]   [ 1 1 1 ]    .1.1
  22:     19 == [ 2 1 3 . ]    11..       [ 3 1 . 2 ]   [ 1 2 1 ]    .11.
  23:     21 == [ 3 1 2 . ]    1.1.       [ 3 1 2 . ]   [ 1 1 3 ]    ..11

 % N=4  npt=1
