// output of ./demo/sort/equivclass-necklaces-demo.cc:
// Description:
//% Equivalence classes: binary necklaces.

arg 1: 4 == nb  [Number of bits of necklaces (0<nb<BITS_PER_LONG).]  default=4
arg 2: 0 == cq  [Whether equivalence includes complements (==> unlabeled necklaces).]  default=0
arg 3: 0 == ksq  [Whether to print key-sorted array.]  default=0
  0:  ....   0
  1:  ...1   1
  2:  ..1.   1
  3:  ..11   3
  4:  .1..   1
  5:  .1.1   5
  6:  .11.   3
  7:  .111   7
  8:  1...   1
  9:  1..1   3
 10:  1.1.   5
 11:  1.11   7
 12:  11..   3
 13:  11.1   7
 14:  111.   7
 15:  1111  15

  0:   ....  [#=1]
  1:   1...  .1..  ...1  ..1.  [#=4]
  3:   1..1  11..  ..11  .11.  [#=4]
  5:   .1.1  1.1.  [#=2]
  7:   11.1  111.  1.11  .111  [#=4]
 15:   1111  [#=1]

  # of equivalence classes = 6
