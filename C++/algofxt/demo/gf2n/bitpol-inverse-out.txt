// output of ./demo/gf2n/bitpol-inverse-demo.cc:
// Description:
//% Modular inversion of binary polynomials via extended gcd (EGCD).

arg 1: 23 == D  [Degree of polynomial moduli ( d < D < BITS_PER_LONG )]  default=23
arg 2: 15 == d  [Degree of polynomials to invert]  default=15
arg 3: 5 == n  [Will invert all coprime polynomials out of n*n candidates]  default=5
  p2= 1.......................
  p1= ........1..............1
  i1= ........1..............1  == p1^{-1} mod p2

  p2= 1.......................
  p1= ........1.............11
  i1= .1.1.1.1.111111111111111  == p1^{-1} mod p2

  p2= 1......................1
  p1= ........1...............
  i1= ...............1........  == p1^{-1} mod p2

  p2= 1......................1
  p1= ........1.............11
  i1= ...1.1..1...11...1111.11  == p1^{-1} mod p2

  p2= 1.....................1.
  p1= ........1.............11
  i1= ..111.1..1.1..111..111.1  == p1^{-1} mod p2

  p2= 1.....................11
  p1= ........1...............
  i1= .111111111111111.......1  == p1^{-1} mod p2

  p2= 1.....................11
  p1= ........1.............1.
  i1= ...1111..1.1...1.1111..1  == p1^{-1} mod p2

  p2= 1.....................11
  p1= ........1.............11
  i1= .11.11.11..1..1..11.11..  == p1^{-1} mod p2

  p2= 1.....................11
  p1= ........1............1..
  i1= .1.1..1...1111.11..1....  == p1^{-1} mod p2

  p2= 1....................1..
  p1= ........1.............11
  i1= .11.11.1111.11.1.11.1111  == p1^{-1} mod p2

