// output of ./demo/fft/fib-walsh-demo.cc:
// Description:
//% Fibonacci-Walsh transform

arg 1: 8 == n  [length=Fib(n)]  default=8
 Fib(n)=21
 0:  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
 1:  1 -1  0  1 -1  1 -1  0  1 -1  0  1 -1  1 -1  0  1 -1  1 -1  0
 2:  1  1 -1  0  0  1  1 -1  1  1 -1  0  0  1  1 -1  0  0  1  1 -1
 3:  1  1  1 -1 -1  0  0  0  1  1  1 -1 -1  1  1  1 -1 -1  0  0  0
 4:  1 -1  0 -1  1  0  0  0  1 -1  0 -1  1  1 -1  0 -1  1  0  0  0
 5:  1  1  1  1  1 -1 -1 -1  0  0  0  0  0  1  1  1  1  1 -1 -1 -1
 6:  1 -1  0  1 -1 -1  1  0  0  0  0  0  0  1 -1  0  1 -1 -1  1  0
 7:  1  1 -1  0  0 -1 -1  1  0  0  0  0  0  1  1 -1  0  0 -1 -1  1
 8:  1  1  1  1  1  1  1  1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  0
 9:  1 -1  0  1 -1  1 -1  0 -1  1  0 -1  1  0  0  0  0  0  0  0  0
10:  1  1 -1  0  0  1  1 -1 -1 -1  1  0  0  0  0  0  0  0  0  0  0
11:  1  1  1 -1 -1  0  0  0 -1 -1 -1  1  1  0  0  0  0  0  0  0  0
12:  1 -1  0 -1  1  0  0  0 -1  1  0  1 -1  0  0  0  0  0  0  0  0
13:  1  1  1  1  1  1  1  1  1  1  1  1  1 -1 -1 -1 -1 -1 -1 -1 -1
14:  1 -1  0  1 -1  1 -1  0  1 -1  0  1 -1 -1  1  0 -1  1 -1  1  0
15:  1  1 -1  0  0  1  1 -1  1  1 -1  0  0 -1 -1  1  0  0 -1 -1  1
16:  1  1  1 -1 -1  0  0  0  1  1  1 -1 -1 -1 -1 -1  1  1  0  0  0
17:  1 -1  0 -1  1  0  0  0  1 -1  0 -1  1 -1  1  0  1 -1  0  0  0
18:  1  1  1  1  1 -1 -1 -1  0  0  0  0  0 -1 -1 -1 -1 -1  1  1  1
19:  1 -1  0  1 -1 -1  1  0  0  0  0  0  0 -1  1  0 -1  1  1 -1  0
20:  1  1 -1  0  0 -1 -1  1  0  0  0  0  0 -1 -1  1  0  0  1  1 -1

